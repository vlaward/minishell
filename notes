ALORS :

legende :
[ ] = A faire
[~] = En cours
[X] = Fait

Ce qu il reste a faire !
-le $?				(check : [x])
-verifer les free	(check : [X])

Primaire
	-si 'environement est plus gros quye la taille donne quand tu lance ston bahs que nique sa mere. 

====================================

subtree commands : (exemple[libft])
	git subtree pull --prefix libft/ git@github.com:vlaward/libft.git main --squash
	git subtree push --prefix libft/ git@github.com:vlaward/libft.git main

git branchs : (not sure about that. Modifie stv, je coco pas nn plus)
branchs list normalement :
    ->main   ;   Nahla    ;   Maya
  command :
    git branch <name> == ajoute une branche
    git checkout <name> == tu passe sur la branche 'name'
    git branch --list == self explenatory
    git merge <branch> == merge la branche "branch" dans la branche actuel (souvent main du coup)
     	
notes :
-les getenv, pas besoin de les free pars ce que ca pointe vers un endroit dans la memoire deja
-perrror regle beaucoup de probleme 
--TROP CHIANT ! On peu pas utiliser des define (je voulais faire un define pour recup[erer le contenus d'une node directement sans la cast et tout mais interdit])
	|--> faire des "inline" fonction ^^


=======================================

AXEL :
- gerer le $$ [flm pas mandatory, et ca me demande de creer un clone au debut pour recupperer le pid]
- gerer l'etat terminal (ouvrir vim , dans un terminal exteren pkill -KILL vim ) [meme bash il plante te fou pas de ma gueule]
-les wildcards c'est pas mandatory mais c'est cool (un truc genre open pwd) [cheh]


ft_testacces
{
	 cmd env (PATH)

	acces(cmd);
	1 = exec;
	0 = {
		while (path[i])
		{
			tmp = strjoin(path[i], cmd);
			acces(tmp);
			1 = exec tmp ;
		}
	}
}

===============================

FAIT ???

-ignore signal pend |ant que enfatn se faite sur e main :DDD (ex m inishell dans minshell dans minishell mon cukl. Ca fait des \n\n\n\nn\)
-remplacer les "== ' '" pars des "is_whitespace" et pareil pour certains tokkens 
-l;es vartaibl;es d'environements dan s le here doc mais pas les guillemets. Verifier ce qui en decoule dans env_handler
-<< a gerer en meme temps que les autres redisrects. remettre le tty en entree standart entre chaqeus redirects
-tester le here doc sans rien
-GERER LA CREATION DE L'ENIRONEMENT. CLONER L'EXISTANT OU CHYERCHER LES INFOS : "env -i bash" pui "env" et voir ce qui est recup
-"env -i ./minishell" regarder avec bash. Il y a un environement minimum au lancement.
-PASSER L'ENV PARTOUT ET FIRE UYN GETENV PARTICULIER !!!!!
-incrementer $SHLVL
-frr le ctrl+/
-bruv... mettre l'env dans l'exec XDDDD
-si $ n'as rien derriere il n'est pas expend  (ex : "echo $" ; "$") c'est giga drole ?? XDD"
-y'as encore un p[utain de probleme avec ce putain de :
		- que "cat << a | ls " marche
"-si il n'y a pas d'env le path marche pas donc il faut le gerer dans l'exec" pas sure de ce que je voulais dire donc bon (maintenant je crois que je vois et c'est bon)
-REPLACE !strcmp pars strcmp == 0. Pars ce que le resultat peu etre negatif (a parrement c'est bon je crois  ?) (En faite normalement y'as pas besoin de le faire c'est deja le cas)
-les variables d'environement, si t'en met ue fausse, ca bug.
- gerer le $_
REMEMBER : J'en suis a verifier les erreur dans redirects. En train de verifier le retour de trim et la facon dont c'est gere.
		->"cat << EOF" apres deux itteration ca plante. (see valgrind) (limiter.c:36) (hisotique pars ce qu'on est pas des putes !!!)
	franchement s'ut ete plus simple de faire des putains de structures mais bon... alright
-export peuy faire une variable sans valeur.
-verifier avec access avant de executer voir en bas laa
-faire en sorte que deux guillemet sans rien soient quand même concidérées comme un mot dans la char ** donné a execve
-les built-in 		(check : [x])<= a verifier mais tout a l'air bon
-les signaux 		(check : [x])<= a verifier mais tout a l'air bon
-< ls < cat | < ls < cat < ls < cat | < ls < cat echo oui
-cas '$> cat""' fait ct alors que il devraispas pour une rason obscure....
-"time sleep 3"
-n'importe quel redirect avec des guillemets ne marche pas 
	-'printf("%u\n", index);
		' ne marche pas
-update les define, mettre un define pour les flags de open
-remplacer TOUT les printfs
-mettre toutes l;es foncitons en static.
-modifier les putestr/ft_putechar etc.... pour qu'il retroune mauvais si jamais il y a une error de write.
-Donc si acess me dit oui, mais que exec me dit non. C'est pas le meme code d'erreur ! Voila pourquoi access
